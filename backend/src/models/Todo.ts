import { Entity, PrimaryGeneratedColumn, Column, CreateDateColumn, UpdateDateColumn } from "typeorm";

// The 'Todo' class is an entity representing a todo item in the database.
// The '@Entity' decorator indicates that this class maps to a 'todo' table in the database.
@Entity('todo')
export class Todo {

    // The 'id' is the primary key of the table, and it is automatically generated by TypeORM.
    // The '!' symbol is used to indicate that this value will be initialized by TypeORM.
    @PrimaryGeneratedColumn()
    id!: number;

    // The 'title' is a required field that will hold the main content of the todo item.
    @Column()
    title!: string;

    // The 'description' is an optional field to provide extra details about the todo item.
    // It can be null if no description is provided.
    @Column({ nullable: true })
    description!: string;

    // The 'completed' field indicates whether the todo has been completed.
    // By default, it is set to 'false' (not completed).
    @Column({ default: false })
    completed!: boolean;

    // 'createdAt' holds the timestamp when the todo item was created.
    // TypeORM automatically sets this when the item is inserted into the database.
    @CreateDateColumn({ name: 'created_at', type: 'timestamp with time zone' })
    createdAt!: Date;

    // 'updatedAt' holds the timestamp when the todo item was last updated.
    // TypeORM automatically updates this whenever the todo is updated.
    @UpdateDateColumn({ name: 'updated_at', type: 'timestamp with time zone' })
    updatedAt!: Date;

    // The constructor allows partial initialization of the 'Todo' object.
    // It uses 'Partial<Todo>' to accept an object with some or all of the properties.
    // The 'Object.assign()' method copies the provided properties into the instance.
    constructor(partial: Partial<Todo> = {}) {
        Object.assign(this, partial); // Initializes the object with any provided properties.
    }
}
